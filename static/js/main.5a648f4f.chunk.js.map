{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","components/PersonElement.tsx","components/PeoplePage.tsx","api.ts","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonElement","person","handleSelection","selectedName","name","to","slug","sex","onClick","born","died","mother","motherName","father","fatherName","People","people","isLoading","loadingError","setSelectedPerson","setSelectedName","localStorage","setItem","updatedPeople","map","child","find","parent","useEffect","selectedPersonSlug","getItem","selectedNewPerson","length","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","NotFoundPage","App","useState","setPeople","setLoading","setLoadingError","selectedPerson","isHomePage","useLocation","pathname","endsWith","fetchPeopleAsync","fetchedData","Error","role","isActive","cn","replace","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5a648f4f.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ninterface Props {\n  person: Person,\n  handleSelection: (name: string | undefined, slug: string,) => void,\n  selectedName: string | undefined,\n}\n\nexport const PersonElement: React.FC<Props> = ({\n  person,\n  handleSelection,\n  selectedName,\n}) => {\n  return (\n    <tr\n      key={person.name}\n      className={selectedName === person.name\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}`}\n          className={person.sex === 'f'\n            ? ('has-text-danger')\n            : ''}\n          onClick={() => {\n            handleSelection(\n              person.name,\n              person.slug,\n            );\n          }}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother ? (\n          <NavLink\n            to={`/people/${person.mother.slug}`}\n            className=\"has-text-danger\"\n            onClick={() => {\n              handleSelection(\n                person.mother?.name,\n                person.mother?.slug || '',\n              );\n            }}\n          >\n            {person.mother.name}\n          </NavLink>\n        ) : (\n          <p>\n            {person.motherName}\n          </p>\n        )}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <NavLink\n              to={`/people/${person.father.slug}`}\n              onClick={() => {\n                handleSelection(\n                  person.father?.name,\n                  person.father?.slug || '',\n                );\n              }}\n            >\n              {person.father.name}\n            </NavLink>\n          ) : (\n            <p>\n              {person.fatherName}\n            </p>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonElement } from './PersonElement';\n\ninterface Props {\n  people: Person[],\n  isLoading: boolean,\n  loadingError: boolean,\n  setSelectedPerson: (value: string) => void,\n  selectedName: string | undefined,\n  setSelectedName: (value: string | undefined) => void,\n}\n\nexport const People: React.FC<Props> = ({\n  people,\n  isLoading,\n  loadingError,\n  setSelectedPerson,\n  setSelectedName,\n  selectedName,\n}) => {\n  const handleSelection = (\n    name: string | undefined,\n    slug: string,\n  ) => {\n    localStorage.setItem('selectedPersonSlug', slug);\n    setSelectedName(name);\n    setSelectedPerson(slug);\n  };\n\n  const updatedPeople = people.map((child) => {\n    if (child.motherName === null && child.fatherName === null) {\n      return {\n        ...child,\n        motherName: '-',\n        fatherName: '-',\n      };\n    }\n\n    if (child.fatherName === null) {\n      return {\n        ...child,\n        fatherName: '-',\n      };\n    }\n\n    if (child.motherName === null) {\n      return {\n        ...child,\n        motherName: '-',\n      };\n    }\n\n    const father = people.find((parent) => parent.name === child.fatherName);\n    const mother = people.find((parent) => parent.name === child.motherName);\n\n    return {\n      ...child,\n      father,\n      mother,\n    };\n  });\n\n  useEffect(() => {\n    const selectedPersonSlug = localStorage.getItem('selectedPersonSlug');\n    const selectedNewPerson\n     = people.find((person) => person.slug === selectedPersonSlug);\n\n    setSelectedName(selectedNewPerson ? selectedNewPerson?.name : '');\n  }, [people]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {loadingError ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            ) : (\n              <>\n                {!isLoading ? (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"table\n                     is-striped is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n                    {people.length === 0 ? (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    ) : (\n                      <tbody>\n                        {updatedPeople.map((person) => {\n                          return (\n                            <PersonElement\n                              person={person}\n                              handleSelection={handleSelection}\n                              selectedName={selectedName}\n                            />\n                          );\n                        })}\n                      </tbody>\n                    )}\n                  </table>\n                ) : (\n                  <Loader />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Route, Routes, NavLink, Navigate, useLocation,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { HomePage } from './components/HomePage';\nimport { People } from './components/PeoplePage';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n  const [selectedName, setSelectedName] = useState<string | undefined>('');\n  const [selectedPerson, setSelectedPerson] = useState<string>(\n    localStorage.getItem('selectedPersonSlug') || '',\n  );\n\n  const location = useLocation();\n\n  const isHomePage = location.pathname.endsWith('/home');\n\n  const fetchPeopleAsync = async () => {\n    try {\n      const fetchedData = await getPeople();\n\n      setLoading(false);\n      setPeople(fetchedData);\n    } catch (error) {\n      setLoadingError(true);\n      throw new Error('There is an error');\n    }\n  };\n\n  useEffect(() => {\n    fetchPeopleAsync();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              replace\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      {isHomePage && <Navigate to=\"/\" replace />}\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route\n          path=\"/people\"\n        >\n          <Route\n            index\n            element={(\n              <People\n                people={people}\n                isLoading={isLoading}\n                loadingError={loadingError}\n                setSelectedPerson={setSelectedPerson}\n                selectedName={selectedName}\n                setSelectedName={setSelectedName}\n              />\n            )}\n          />\n          <Route\n            path={`/people/:${selectedPerson}`}\n            element={(\n              <People\n                people={people}\n                isLoading={isLoading}\n                loadingError={loadingError}\n                setSelectedPerson={setSelectedPerson}\n                selectedName={selectedName}\n                setSelectedName={setSelectedName}\n              />\n            )}\n          />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}