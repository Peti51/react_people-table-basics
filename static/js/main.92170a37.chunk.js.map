{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","components/PersonElement.tsx","components/PeoplePage.tsx","api.ts","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonElement","person","handleSelection","personSlug","name","sex","born","died","fatherName","motherName","slug","mother","father","to","onClick","People","people","isLoading","loadingError","updatedPeople","map","child","find","parent","length","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","NotFoundPage","App","useState","setPeople","setLoading","setLoadingError","localStorage","getItem","selectedSlug","setSelectedSlug","location","useLocation","useParams","isHomePage","pathname","endsWith","fetchPeopleAsync","fetchedData","window","Error","useEffect","role","isActive","cn","replace","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.92170a37.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ninterface Props {\n  person: Person,\n  handleSelection: (slug: string,) => void,\n  personSlug: string | undefined,\n}\n\nexport const PersonElement: React.FC<Props> = ({\n  person,\n  handleSelection,\n  personSlug,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      className={personSlug === slug\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={sex === 'f'\n            ? ('has-text-danger')\n            : ''}\n          onClick={() => {\n            handleSelection(\n              slug,\n            );\n          }}\n        >\n          {name}\n        </NavLink>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <NavLink\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n            onClick={() => {\n              handleSelection(\n                mother?.slug || '',\n              );\n            }}\n          >\n            {mother.name}\n          </NavLink>\n        ) : (\n          <p>\n            {motherName}\n          </p>\n        )}\n      </td>\n      <td>\n        {father\n          ? (\n            <NavLink\n              to={`/people/${father.slug}`}\n              onClick={() => {\n                handleSelection(\n                  father?.slug || '',\n                );\n              }}\n            >\n              {father.name}\n            </NavLink>\n          ) : (\n            <p>\n              {fatherName}\n            </p>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonElement } from './PersonElement';\n\ninterface Props {\n  people: Person[],\n  isLoading: boolean,\n  loadingError: boolean,\n  personSlug: string | undefined,\n  handleSelection: (slug: string,) => void,\n}\n\nexport const People: React.FC<Props> = ({\n  people,\n  isLoading,\n  loadingError,\n  handleSelection,\n  personSlug,\n}) => {\n  const updatedPeople = people.map((child) => {\n    if (!child.motherName && !child.fatherName) {\n      return {\n        ...child,\n        motherName: '-',\n        fatherName: '-',\n      };\n    }\n\n    if (!child.fatherName) {\n      return {\n        ...child,\n        fatherName: '-',\n      };\n    }\n\n    if (!child.motherName) {\n      return {\n        ...child,\n        motherName: '-',\n      };\n    }\n\n    const father = people.find((parent) => parent.name === child.fatherName);\n    const mother = people.find((parent) => parent.name === child.motherName);\n\n    return {\n      ...child,\n      father,\n      mother,\n    };\n  });\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {loadingError ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            ) : (\n              <>\n                {!isLoading ? (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"table\n                     is-striped is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n                    {people.length === 0 ? (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    ) : (\n                      <tbody>\n                        {updatedPeople.map((person) => {\n                          return (\n                            <PersonElement\n                              key={person.slug}\n                              person={person}\n                              handleSelection={handleSelection}\n                              personSlug={personSlug}\n                            />\n                          );\n                        })}\n                      </tbody>\n                    )}\n                  </table>\n                ) : (\n                  <Loader />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Route, Routes, NavLink, Navigate, useLocation, useParams,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { HomePage } from './components/HomePage';\nimport { People } from './components/PeoplePage';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n  const [selectedSlug, setSelectedSlug] = useState<string>(\n    localStorage.getItem('selectedPersonSlug') || '',\n  );\n\n  const location = useLocation();\n\n  const { personSlug } = useParams();\n\n  const isHomePage = location.pathname.endsWith('/home');\n\n  const handleSelection = (slug: string) => {\n    if (personSlug !== slug) {\n      setSelectedSlug(slug);\n    }\n  };\n\n  const fetchPeopleAsync = async () => {\n    try {\n      const fetchedData = await getPeople();\n\n      setLoading(false);\n      setPeople(fetchedData);\n      setSelectedSlug(window.location.pathname);\n    } catch (error) {\n      setLoadingError(true);\n      throw new Error('Failed to fetch people');\n    }\n  };\n\n  useEffect(() => {\n    fetchPeopleAsync();\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              replace\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      {isHomePage && <Navigate to=\"/\" replace />}\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        {selectedSlug}\n        <Route path=\"/people\">\n          <Route\n            index\n            element={(\n              <People\n                people={people}\n                isLoading={isLoading}\n                loadingError={loadingError}\n                personSlug={selectedSlug}\n                handleSelection={handleSelection}\n              />\n            )}\n          />\n          <Route\n            path={`/people/:${personSlug}`}\n            element={(\n              <People\n                people={people}\n                isLoading={isLoading}\n                loadingError={loadingError}\n                personSlug={selectedSlug}\n                handleSelection={handleSelection}\n              />\n            )}\n          />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}