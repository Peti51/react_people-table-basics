{"version":3,"sources":["components/HomePage.tsx","components/Loader/Loader.tsx","components/PersonElement.tsx","api.ts","components/PeoplePage.tsx","components/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","PersonElement","person","handleSelection","personSlug","name","sex","born","died","fatherName","motherName","slug","mother","father","location","useLocation","pathname","toString","slice","to","onClick","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","People","useState","people","setPeople","isLoading","setLoading","loadingError","setLoadingError","localStorage","getItem","selectedSlug","setSelectedSlug","useParams","updatedPeople","map","child","find","parent","setItem","fetchPeopleAsync","fetchedData","Error","useEffect","some","window","href","length","NotFoundPage","App","isHomePage","endsWith","role","isActive","cn","replace","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.26432569.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Person } from '../types/Person';\n\ninterface Props {\n  person: Person,\n  handleSelection: (slug: string,) => void,\n  personSlug: string | undefined,\n}\n\nexport const PersonElement: React.FC<Props> = ({\n  person,\n  handleSelection,\n  personSlug,\n}) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const location = useLocation().pathname.toString().slice(8);\n\n  return (\n    <tr\n      className={personSlug === slug && location === slug\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <NavLink\n          to={`/people/${slug}`}\n          className={sex === 'f'\n            ? 'has-text-danger'\n            : ''}\n          onClick={() => handleSelection(slug)}\n        >\n          {name}\n        </NavLink>\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <NavLink\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n            onClick={() => {\n              handleSelection(\n                mother?.slug || '',\n              );\n            }}\n          >\n            {mother.name}\n          </NavLink>\n        ) : (\n          <p>\n            {motherName}\n          </p>\n        )}\n      </td>\n      <td>\n        {father\n          ? (\n            <NavLink\n              to={`/people/${father.slug}`}\n              onClick={() => {\n                handleSelection(\n                  father?.slug || '',\n                );\n              }}\n            >\n              {father.name}\n            </NavLink>\n          ) : (\n            <p>\n              {fatherName}\n            </p>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from './Loader';\nimport { PersonElement } from './PersonElement';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nexport const People: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n  const [selectedSlug, setSelectedSlug] = useState<string>(\n    localStorage.getItem('selectedPersonSlug') || '',\n  );\n\n  const { personSlug } = useParams<{ personSlug: string }>();\n\n  const updatedPeople = people.map((child) => {\n    if (!child.motherName && !child.fatherName) {\n      return {\n        ...child,\n        motherName: '-',\n        fatherName: '-',\n      };\n    }\n\n    if (!child.fatherName) {\n      return {\n        ...child,\n        fatherName: '-',\n      };\n    }\n\n    if (!child.motherName) {\n      return {\n        ...child,\n        motherName: '-',\n      };\n    }\n\n    const father = people.find((parent) => parent.name === child.fatherName);\n    const mother = people.find((parent) => parent.name === child.motherName);\n\n    return {\n      ...child,\n      father,\n      mother,\n    };\n  });\n\n  const handleSelection = (slug: string) => {\n    if (personSlug !== slug) {\n      setSelectedSlug(slug);\n    }\n\n    localStorage.setItem('selectedPersonSlug', slug);\n  };\n\n  const fetchPeopleAsync = async () => {\n    try {\n      const fetchedData = await getPeople();\n\n      setLoading(false);\n      setPeople(fetchedData);\n    } catch (error) {\n      setLoadingError(true);\n      throw new Error('Failed to fetch people');\n    }\n  };\n\n  useEffect(() => {\n    fetchPeopleAsync();\n  }, []);\n\n  useEffect(() => {\n    if (personSlug && !people.some(person => person.slug === personSlug)) {\n      setSelectedSlug('');\n      localStorage.setItem('selectedPersonSlug', '');\n    }\n  }, [personSlug, people, window.location.href]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {loadingError ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            ) : (\n              <>\n                {!isLoading ? (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"table\n                     is-striped is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n                    {people.length === 0 ? (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    ) : (\n                      <tbody>\n                        {updatedPeople.map((person) => {\n                          return (\n                            <PersonElement\n                              key={person.slug}\n                              person={person}\n                              handleSelection={handleSelection}\n                              personSlug={selectedSlug}\n                            />\n                          );\n                        })}\n                      </tbody>\n                    )}\n                  </table>\n                ) : (\n                  <Loader />\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import React from 'react';\nimport {\n  Route, Routes, NavLink, Navigate, useLocation,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { HomePage } from './components/HomePage';\nimport { People } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const App: React.FC = () => {\n  const location = useLocation();\n\n  const isHomePage = location.pathname.endsWith('/home');\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => cn('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n              replace\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      {isHomePage && <Navigate to=\"/\" replace />}\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route path=\"/people\">\n          <Route index element={<People />} />\n          <Route path=\":slug\" element={<People />} />\n        </Route>\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}