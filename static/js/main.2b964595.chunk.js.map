{"version":3,"sources":["components/homePage.tsx","components/Loader/Loader.tsx","components/peoplePage.tsx","api.ts","components/notFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Loader","People","people","isLoading","loadingError","useState","selectedName","setSelectedName","updatedPeople","map","child","motherName","fatherName","father","find","parent","name","mother","length","person","href","slug","sex","role","onClick","event","preventDefault","handleSelection","born","died","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","NotFoundPage","App","setPeople","navigate","useNavigate","setLoading","setLoadingError","fetchedData","console","error","useEffect","peopleArr","handleGoBack","replace","window","addEventListener","removeEventListener","isActive","cn","to","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2b964595.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Home Page</h1>\n      </div>\n    </main>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState } from 'react';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\n\ninterface Props {\n  people: Person[],\n  isLoading: boolean,\n  loadingError: boolean,\n}\n\nexport const People: React.FC<Props> = ({\n  people,\n  isLoading,\n  loadingError,\n}) => {\n  const [selectedName, setSelectedName] = useState('');\n\n  const handleSelection\n  = (event: React.MouseEvent<HTMLAnchorElement>, name: string) => {\n    event.preventDefault();\n\n    setSelectedName(name);\n  };\n\n  const updatedPeople = people.map((child) => {\n    if (child.motherName === null && child.fatherName === null) {\n      return {\n        ...child,\n        motherName: '-',\n        fatherName: '-',\n      };\n    }\n\n    if (child.fatherName === null) {\n      return {\n        ...child,\n        fatherName: '-',\n      };\n    }\n\n    if (child.motherName === null) {\n      return {\n        ...child,\n        motherName: '-',\n      };\n    }\n\n    const father = people.find((parent) => parent.name === child.fatherName);\n    const mother = people.find((parent) => parent.name === child.motherName);\n\n    return {\n      ...child,\n      father,\n      mother,\n    };\n  });\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            {loadingError ? (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n            ) : (\n              <>\n                {!isLoading ? (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"table\n                     is-striped is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n                    {people.length === 0 ? (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    ) : (\n                      <tbody>\n                        {updatedPeople.map((person) => {\n                          return (\n\n                            <tr\n                              key={person.name}\n                              className={selectedName === person.name\n                                ? 'has-background-warning'\n                                : ''}\n                            >\n                              <td>\n                                <a\n                                  href={person.slug}\n                                  className={person.sex === 'f'\n                                    ? ('has-text-danger')\n                                    : ''}\n                                  role=\"button\"\n                                  onClick={(event) => {\n                                    handleSelection(event, person.name);\n                                  }}\n                                >\n                                  {person.name}\n                                </a>\n                              </td>\n                              <td>{person.sex}</td>\n                              <td>{person.born}</td>\n                              <td>{person.died}</td>\n                              <td>\n                                {person.mother\n                                  ? (\n                                    <a\n                                      href={person.mother?.slug}\n                                      className=\"has-text-danger\"\n                                    >\n                                      {person.mother.name}\n                                    </a>\n                                  ) : (\n                                    <p>\n                                      {person.motherName}\n                                    </p>\n                                  )}\n                              </td>\n                              <td>\n                                {person.father\n                                  ? (\n                                    <a\n                                      href={person.father?.slug}\n                                    >\n                                      {person.father.name}\n                                    </a>\n                                  ) : (\n                                    <p>\n                                      {person.fatherName}\n                                    </p>\n                                  )}\n                              </td>\n                            </tr>\n\n                          );\n                        })}\n                      </tbody>\n                    )}\n                  </table>\n                ) : (\n                  <Loader />\n                )}\n              </>\n\n            )}\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export const NotFoundPage = () => {\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Page not found</h1>\n      </div>\n    </main>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  useNavigate, Route, Routes, NavLink,\n} from 'react-router-dom';\nimport cn from 'classnames';\nimport { HomePage } from './components/homePage';\nimport { People } from './components/peoplePage';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { NotFoundPage } from './components/notFoundPage';\n\nexport const App: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const navigate = useNavigate();\n  const [isLoading, setLoading] = useState(true);\n  const [loadingError, setLoadingError] = useState(false);\n\n  async function peopleArr() {\n    try {\n      const fetchedData = await getPeople();\n\n      setLoading(false);\n      setPeople(fetchedData);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error('Error occurred:', error);\n      setLoadingError(true);\n    }\n  }\n\n  useEffect(() => {\n    peopleArr();\n  });\n\n  useEffect(() => {\n    const handleGoBack = () => {\n      navigate('/another-page', { replace: true });\n    };\n\n    window.addEventListener('popstate', handleGoBack);\n\n    return () => {\n      window.removeEventListener('popstate', handleGoBack);\n    };\n  }, [navigate]);\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              )}\n              replace\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n            <NavLink\n              className={({ isActive }) => (\n                cn(\n                  'navbar-item',\n                  {\n                    'has-background-grey-lighter': isActive,\n                  },\n                )\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<HomePage />}\n        />\n        <Route\n          path=\"/people\"\n          element={(\n            <People\n              people={people}\n              isLoading={isLoading}\n              loadingError={loadingError}\n            />\n          )}\n        />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}